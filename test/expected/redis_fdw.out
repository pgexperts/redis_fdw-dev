CREATE OR REPLACE FUNCTION atsort( a text[])
 RETURNS text[]
 LANGUAGE sql
 IMMUTABLE  STRICT
AS $function$
  select array(select unnest($1) order by 1)
$function$
;
create server localredis foreign data wrapper redis_fdw;
create user mapping for public server localredis;
-- tables for all 5 data types (4 structured plus scalar)
create foreign table db15(key text, value text)
       server localredis
       options (database '15');
create foreign table db15_hash(key text, value text)
       server localredis
       options (database '15', tabletype 'hash');
create foreign table db15_set(key text, value text)
       server localredis
       options (database '15', tabletype 'set');
create foreign table db15_list(key text, value text)
       server localredis
       options (database '15', tabletype 'list');
create foreign table db15_zset(key text, value text)
       server localredis
       options (database '15', tabletype 'zset');
-- make sure they are all empty - if any are not stop the script right now
\set ON_ERROR_STOP
do $$
  declare
    rows bigint;
  begin
    select into rows
        (select count(*) from db15) +
        (select count(*) from db15_hash) +
        (select count(*) from db15_set) +
        (select count(*) from db15_list) +
        (select count(*) from db15_zset);
    if rows > 0
    then
       raise EXCEPTION 'db 15 not empty';
    end if;
  end;
$$;
\unset ON_ERROR_STOP
-- ok, empty, so now run the setup script
\! redis-cli < test/sql/redis_setup
OK
OK
OK
8
5
6
4
OK
OK
6
6
2
2
2
2
select * from db15 order by key;
 key | value  
-----+--------
 baz | blurfl
 foo | bar
(2 rows)

select * from db15 where key = 'foo';
 key | value 
-----+-------
 foo | bar
(1 row)

-- hash
create foreign table db15_hash_prefix(key text, value text)
       server localredis
       options (tabletype 'hash', tablekeyprefix 'hash', database '15');
create foreign table db15_hash_prefix_array(key text, value text[])
       server localredis
       options (tabletype 'hash', tablekeyprefix 'hash', database '15');
create foreign table db15_hash_keyset_array(key text, value text[])
       server localredis
       options (tabletype 'hash', tablekeyset 'hkeys', database '15');
select * from db15_hash_prefix order by key;
  key  |                   value                   
-------+-------------------------------------------
 hash1 | {"k1","v1","k2","v2","k3","v3","k4","v4"}
 hash2 | {"k1","v5","k2","v6","k3","v7","k4","v8"}
(2 rows)

select * from db15_hash_prefix where key = 'hash1';
  key  |                   value                   
-------+-------------------------------------------
 hash1 | {"k1","v1","k2","v2","k3","v3","k4","v4"}
(1 row)

select * from db15_hash_prefix_array order by key;
  key  |           value           
-------+---------------------------
 hash1 | {k1,v1,k2,v2,k3,v3,k4,v4}
 hash2 | {k1,v5,k2,v6,k3,v7,k4,v8}
(2 rows)

select * from db15_hash_prefix_array where key = 'hash1';
  key  |           value           
-------+---------------------------
 hash1 | {k1,v1,k2,v2,k3,v3,k4,v4}
(1 row)

select * from db15_hash_keyset_array order by key;
  key  |           value           
-------+---------------------------
 hash1 | {k1,v1,k2,v2,k3,v3,k4,v4}
 hash2 | {k1,v5,k2,v6,k3,v7,k4,v8}
(2 rows)

select * from db15_hash_keyset_array where key = 'hash1';
  key  |           value           
-------+---------------------------
 hash1 | {k1,v1,k2,v2,k3,v3,k4,v4}
(1 row)

-- a couple of nifty things we an do with hash tables
select key, hstore(value) from db15_hash_prefix_array order by key;
  key  |                     hstore                     
-------+------------------------------------------------
 hash1 | "k1"=>"v1", "k2"=>"v2", "k3"=>"v3", "k4"=>"v4"
 hash2 | "k1"=>"v5", "k2"=>"v6", "k3"=>"v7", "k4"=>"v8"
(2 rows)

create type atab as (k1 text, k2 text, k3 text);
select key, (populate_record(null::atab, hstore(value))).*
from db15_hash_prefix_array
order by key;
  key  | k1 | k2 | k3 
-------+----+----+----
 hash1 | v1 | v2 | v3
 hash2 | v5 | v6 | v7
(2 rows)

-- set
create foreign table db15_set_prefix(key text, value text)
       server localredis
       options (tabletype 'set', tablekeyprefix 'set', database '15');
create foreign table db15_set_prefix_array(key text, value text[])
       server localredis
       options (tabletype 'set', tablekeyprefix 'set', database '15');
create foreign table db15_set_keyset_array(key text, value text[])
       server localredis
       options (tabletype 'set', tablekeyset 'skeys', database '15');
-- need to use atsort() on set results to get predicable output
-- since redis will give them back in arbitrary order
-- means we can't show the actual value for db15_set_prefix which has it as a
-- single text field
select key, atsort(value::text[]) as value from db15_set_prefix order by key;
 key  |           value           
------+---------------------------
 set1 | {m1,m2,m3,m4,m5,m6,m7,m8}
 set2 | {m10,m11,m12,m8,m9}
(2 rows)

select key, atsort(value::text[]) as value from db15_set_prefix where key = 'set1';
 key  |           value           
------+---------------------------
 set1 | {m1,m2,m3,m4,m5,m6,m7,m8}
(1 row)

select key, atsort(value) as value from db15_set_prefix_array order by key;
 key  |           value           
------+---------------------------
 set1 | {m1,m2,m3,m4,m5,m6,m7,m8}
 set2 | {m10,m11,m12,m8,m9}
(2 rows)

select key, atsort(value) as value from db15_set_prefix_array where key = 'set1';
 key  |           value           
------+---------------------------
 set1 | {m1,m2,m3,m4,m5,m6,m7,m8}
(1 row)

select key, atsort(value) as value from db15_set_keyset_array order by key;
 key  |           value           
------+---------------------------
 set1 | {m1,m2,m3,m4,m5,m6,m7,m8}
 set2 | {m10,m11,m12,m8,m9}
(2 rows)

select key, atsort(value) as value from db15_set_keyset_array where key = 'set1';
 key  |           value           
------+---------------------------
 set1 | {m1,m2,m3,m4,m5,m6,m7,m8}
(1 row)

-- list
create foreign table db15_list_prefix(key text, value text)
       server localredis
       options (tabletype 'list', tablekeyprefix 'list', database '15');
create foreign table db15_list_prefix_array(key text, value text[])
       server localredis
       options (tabletype 'list', tablekeyprefix 'list', database '15');
create foreign table db15_list_keyset_array(key text, value text[])
       server localredis
       options (tabletype 'list', tablekeyset 'lkeys', database '15');
select * from db15_list_prefix order by key;
  key  |              value              
-------+---------------------------------
 list1 | {"e6","e5","e4","e3","e2","e1"}
 list2 | {"e10","e9","e8","e7"}
(2 rows)

select * from db15_list_prefix where key = 'list1';
  key  |              value              
-------+---------------------------------
 list1 | {"e6","e5","e4","e3","e2","e1"}
(1 row)

select * from db15_list_prefix_array order by key;
  key  |        value        
-------+---------------------
 list1 | {e6,e5,e4,e3,e2,e1}
 list2 | {e10,e9,e8,e7}
(2 rows)

select * from db15_list_prefix_array where key = 'list1';
  key  |        value        
-------+---------------------
 list1 | {e6,e5,e4,e3,e2,e1}
(1 row)

select * from db15_list_keyset_array order by key;
  key  |        value        
-------+---------------------
 list1 | {e6,e5,e4,e3,e2,e1}
 list2 | {e10,e9,e8,e7}
(2 rows)

select * from db15_list_keyset_array where key = 'list1';
  key  |        value        
-------+---------------------
 list1 | {e6,e5,e4,e3,e2,e1}
(1 row)

-- zset
create foreign table db15_zset_prefix(key text, value text)
       server localredis
       options (tabletype 'zset', tablekeyprefix 'zset', database '15');
create foreign table db15_zset_prefix_array(key text, value text[])
       server localredis
       options (tabletype 'zset', tablekeyprefix 'zset', database '15');
create foreign table db15_zset_keyset_array(key text, value text[])
       server localredis
       options (tabletype 'zset', tablekeyset 'zkeys', database '15');
select * from db15_zset_prefix order by key;
  key  |               value                
-------+------------------------------------
 zset1 | {"z1","z2","z3","z4","z5","z6"}
 zset2 | {"z7","z8","z9","z10","z11","z12"}
(2 rows)

select * from db15_zset_prefix where key = 'zset1';
  key  |              value              
-------+---------------------------------
 zset1 | {"z1","z2","z3","z4","z5","z6"}
(1 row)

select * from db15_zset_prefix_array order by key;
  key  |         value          
-------+------------------------
 zset1 | {z1,z2,z3,z4,z5,z6}
 zset2 | {z7,z8,z9,z10,z11,z12}
(2 rows)

select * from db15_zset_prefix_array where key = 'zset1';
  key  |        value        
-------+---------------------
 zset1 | {z1,z2,z3,z4,z5,z6}
(1 row)

select * from db15_zset_keyset_array order by key;
  key  |         value          
-------+------------------------
 zset1 | {z1,z2,z3,z4,z5,z6}
 zset2 | {z7,z8,z9,z10,z11,z12}
(2 rows)

select * from db15_zset_keyset_array where key = 'zset1';
  key  |        value        
-------+---------------------
 zset1 | {z1,z2,z3,z4,z5,z6}
(1 row)

-- singleton scalar
create foreign table db15_1key(value text)
       server localredis
       options (singleton_key 'foo', database '15');
select * from db15_1key;
 value 
-------
 bar
(1 row)

-- singleton hash
create foreign table db15_1key_hash(key text, value text)
       server localredis
       options (tabletype 'hash', singleton_key 'hash1', database '15');
select * from db15_1key_hash order by key;
 key | value 
-----+-------
 k1  | v1
 k2  | v2
 k3  | v3
 k4  | v4
(4 rows)

-- singleton set
create foreign table db15_1key_set(value text)
       server localredis
       options (tabletype 'set', singleton_key 'set1', database '15');
select * from db15_1key_set order by value;
 value 
-------
 m1
 m2
 m3
 m4
 m5
 m6
 m7
 m8
(8 rows)

-- singleton list
create foreign table db15_1key_list(value text)
       server localredis
       options (tabletype 'list', singleton_key 'list1', database '15');
select * from db15_1key_list order by value;
 value 
-------
 e1
 e2
 e3
 e4
 e5
 e6
(6 rows)

-- singleton zset
create foreign table db15_1key_zset(value text)
       server localredis
       options (tabletype 'zset', singleton_key 'zset1', database '15');
select * from db15_1key_zset order by value;
 value 
-------
 z1
 z2
 z3
 z4
 z5
 z6
(6 rows)

-- singleton zset with scores
create foreign table db15_1key_zset_scores(value text, score numeric)
       server localredis
       options (tabletype 'zset', singleton_key 'zset1', database '15');
select * from db15_1key_zset_scores order by score desc;
 value | score 
-------+-------
 z6    |     6
 z5    |     5
 z4    |     4
 z3    |     3
 z2    |     2
 z1    |     1
(6 rows)

-- all done,so now blow everything in the db away agan
\! redis-cli < test/sql/redis_clean
OK
OK
